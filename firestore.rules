rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow public read access to products, sellers, and buyers
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && (
        exists(/databases/$(database)/documents/admins/$(request.auth.uid)) ||
        request.auth.uid == resource.data.sellerId
      );
    }

    match /sellers/{sellerId} {
      allow read: if true;
      allow write: if request.auth != null && (
        exists(/databases/$(database)/documents/admins/$(request.auth.uid)) ||
        request.auth.uid == sellerId
      );
    }
    
    match /buyers/{buyerId} {
      allow read: if true;
      allow write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    match /quote-requests/{requestId} {
      allow read: if request.auth != null && (
        exists(/databases/$(database)/documents/admins/$(request.auth.uid)) ||
        request.auth.uid == resource.data.sellerId
      );
      allow create: if true; // Anyone can submit a quote request
    }
    
    match /contact-messages/{messageId} {
        allow read: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
        allow create: if true;
    }

    // Only admins can read/write to the admins collection
    match /admins/{adminId} {
      allow read, write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Rules for the new sourcing-requests collection
    match /sourcing-requests/{requestId} {
      // Allow public read access for visitors
      allow get: if true;
      // Admins can read the whole list, create, update, and delete.
      allow list, write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
  }
}
